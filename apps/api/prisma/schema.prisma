// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  TECHNICIAN
  PUBLIC
}

model User {
  id       String   @id @default(cuid())
  username String
  role     UserRole
}

enum EventType {
  START
  END
}

model Event {
  id        String    @id @default(cuid())
  type      EventType
  time      DateTime
  confirmed Boolean   @default(false)
  session   Session   @relation(fields: [sessionId], references: [id])
  sessionId String
  delayLog  DelayLog?
}

model Movie {
  id          String    @id @default(cuid())
  title       String
  description String
  runningTime Int // ms
  realisateur String
  posterPath  String?
  sessions    Session[]
  movieSlug   String    @unique
}

enum SessionType {
  PROJECTION
  DEBAT
  PAUSE
  OTHER
}

model Session {
  id                String   @id @default(cuid())
  originalStartTime DateTime
  originalEndTime   DateTime // ms

  startTime DateTime
  endTime   DateTime

  events  Event[] // 2 : START |Â END
  delayed Boolean @default(false)
  delay   Int     @default(0)

  type SessionType

  movie     Movie?  @relation(fields: [movieSlug], references: [movieSlug])
  movieSlug String?

  title       String
  description String

  timeline   Timeline @relation(fields: [timelineId], references: [id])
  timelineId String
}

model Timeline {
  id       String    @id @default(cuid())
  salleId  String    @unique
  salle    Salle     @relation(fields: [salleId], references: [id])
  sessions Session[]
}

model Salle {
  id       String    @id @default(cuid())
  name     String
  timeline Timeline?
}

enum DelayActionType {
  CONTAIN
  PROPAGATE
}

model DelayLog {
  id         String          @id @default(cuid())
  delayStart DateTime
  delayEnd   DateTime
  event      Event           @relation(fields: [eventId], references: [id])
  eventId    String          @unique
  action     DelayActionType
}
